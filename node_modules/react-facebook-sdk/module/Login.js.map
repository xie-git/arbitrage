{"version":3,"sources":["../src/Login.jsx"],"names":["PropTypes","Process","Login","process","facebook","scope","fields","returnScopes","rerequest","reauthorize","props","loginQpts","authType","return_scopes","push","length","auth_type","join","response","login","status","Error","getTokenDetailWithProfile","propTypes","string","isRequired","arrayOf","bool","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,OAApB,CAA4B;;AAoBnCE,SAAN,CAAcC,QAAd,EAAwB;AAAA;;AAAA;AACtB,YAAM,EAAEC,KAAF,EAASC,MAAT,EAAiBC,YAAjB,EAA+BC,SAA/B,EAA0CC,WAA1C,KAA0D,MAAKC,KAArE;AACA,YAAMC,YAAY,EAAEN,KAAF,EAAlB;AACA,YAAMO,WAAW,EAAjB;;AAEA,UAAIL,YAAJ,EAAkB;AAChBI,kBAAUE,aAAV,GAA0B,IAA1B;AACD;;AAED,UAAIL,SAAJ,EAAe;AACbI,iBAASE,IAAT,CAAc,WAAd;AACD;;AAED,UAAIL,WAAJ,EAAiB;AACfG,iBAASE,IAAT,CAAc,gBAAd;AACD;;AAED,UAAIF,SAASG,MAAb,EAAqB;AACnBJ,kBAAUK,SAAV,GAAsBJ,SAASK,IAAT,CAAc,GAAd,CAAtB;AACD;;AAED,YAAMC,WAAW,MAAMd,SAASe,KAAT,CAAeR,SAAf,CAAvB;AACA,UAAIO,SAASE,MAAT,KAAoB,WAAxB,EAAqC;AACnC,cAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,aAAOjB,SAASkB,yBAAT,CAAmC,EAAEhB,MAAF,EAAnC,CAAP;AA1BsB;AA2BvB;AA/CwC;AAAtBJ,K,CACZqB,S,gBACFtB,QAAQsB,S;AACXlB,SAAOL,UAAUwB,MAAV,CAAiBC,U;AACxBnB,UAAQN,UAAU0B,OAAV,CAAkB1B,UAAUwB,MAA5B,C;AACRjB,gBAAcP,UAAU2B,I;AACxBnB,aAAWR,UAAU2B,I;AACrBlB,eAAaT,UAAU2B;;AAPNzB,K,CAUZ0B,Y,gBACF3B,QAAQ2B,Y;AACXvB,SAAO,E;AACPC,UAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,WAArB,EAAkC,aAAlC,EACN,MADM,EACE,OADF,EACW,QADX,EACqB,QADrB,EAC+B,UAD/B,EAC2C,UAD3C,EACuD,MADvD,C;AAERC,gBAAc,K;AACdC,aAAW,K;AACXC,eAAa","file":"Login.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Process from './Process';\n\nexport default class Login extends Process {\n  static propTypes = {\n    ...Process.propTypes,\n    scope: PropTypes.string.isRequired,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    returnScopes: PropTypes.bool,\n    rerequest: PropTypes.bool,\n    reauthorize: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ...Process.defaultProps,\n    scope: '',\n    fields: ['id', 'first_name', 'last_name', 'middle_name',\n      'name', 'email', 'locale', 'gender', 'timezone', 'verified', 'link'],\n    returnScopes: false,\n    rerequest: false,\n    reauthorize: false,\n  };\n\n  async process(facebook) {\n    const { scope, fields, returnScopes, rerequest, reauthorize } = this.props;\n    const loginQpts = { scope };\n    const authType = [];\n\n    if (returnScopes) {\n      loginQpts.return_scopes = true;\n    }\n\n    if (rerequest) {\n      authType.push('rerequest');\n    }\n\n    if (reauthorize) {\n      authType.push('reauthenticate');\n    }\n\n    if (authType.length) {\n      loginQpts.auth_type = authType.join(',');\n    }\n\n    const response = await facebook.login(loginQpts);\n    if (response.status !== 'connected') {\n      throw new Error('Unauthorized user');\n    }\n\n    return facebook.getTokenDetailWithProfile({ fields });\n  }\n}\n"]}