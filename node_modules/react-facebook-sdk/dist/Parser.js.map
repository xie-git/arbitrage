{"version":3,"sources":["../src/Parser.jsx"],"names":["Parser","handleFacebookReady","facebook","parse","handleContainer","container","shouldComponentUpdate","componentWillReceiveProps","props","oldChildren","children","changed","Object","keys","find","propName","oldValue","newValue","rerender","forceUpdate","parsed","parseResponse","onParse","render","className","propTypes","string","node","isRequired","func","defaultProps","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,MAAN,0BAA+B;AAAA;AAAA;;AAAA,wCA2C5CC,mBA3C4C,GA2CrBC,QAAD,IAAc;AAClC,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKC,KAAL;AACD,KA9C2C,OAgD5CC,eAhD4C,GAgDzBC,SAAD,IAAe;AAC/B,WAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAKF,KAAL;AACD,KAnD2C;AAAA;;AAY5CG,0BAAwB;AACtB,WAAO,KAAP;AACD;;AAEDC,4BAA0BC,KAA1B,EAAiC;AAC/B,UAAMC,cAAc,KAAKD,KAAL,CAAWE,QAA/B;AACA,UAAM,EAAEA,QAAF,KAAeF,KAArB;;AAEA,QAAI,CAACE,QAAD,IAAa,CAACD,WAAlB,EAA+B;AAC7B;AACD;;AAED,UAAME,UAAUC,OAAOC,IAAP,CAAYJ,YAAYD,KAAxB,EAA+BM,IAA/B,CAAqCC,QAAD,IAAc;AAChE,YAAMC,WAAWP,YAAYD,KAAZ,CAAkBO,QAAlB,CAAjB;AACA,YAAME,WAAWP,SAASF,KAAT,CAAeO,QAAf,CAAjB;;AAEA,aAAOC,aAAaC,QAApB;AACD,KALe,CAAhB;;AAOA,QAAIN,OAAJ,EAAa;AACX,WAAKO,QAAL;AACD;AACF;;AAEDA,aAAW;AACT,SAAKC,WAAL;;AAEA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKjB,KAAL;AACD;;AAYDA,UAAQ;AACN,UAAM,EAAEiB,MAAF,EAAUf,SAAV,EAAqBH,QAArB,KAAkC,IAAxC;AACA,QAAIkB,UAAU,CAACf,SAAX,IAAwB,CAACH,QAA7B,EAAuC;AACrC,aAAO,KAAP;AACD;;AAED,SAAKkB,MAAL,GAAc,IAAd;;AAEA,UAAMC,gBAAgBnB,SAASC,KAAT,CAAeE,SAAf,CAAtB;;AAEA,UAAM,EAAEiB,OAAF,KAAc,KAAKd,KAAzB;AACA,QAAIc,OAAJ,EAAa;AACXA,cAAQD,aAAR;AACD;;AAED,WAAOA,aAAP;AACD;;AAEDE,WAAS;AACP,UAAM,EAAEC,SAAF,EAAad,QAAb,KAA0B,KAAKF,KAArC;;AAEA,WACE;AAAA;AAAA,QAAc,SAAS,KAAKP,mBAA5B;AACE;AAAA;AAAA,UAAK,WAAWuB,SAAhB,EAA2B,KAAK,KAAKpB,eAArC;AACGM;AADH;AADF,KADF;AAOD;AAjF2C;kBAAzBV,M;AAAAA,M,CACZyB,S,GAAY;AACjBD,aAAW,oBAAUE,MADJ;AAEjBhB,YAAU,oBAAUiB,IAAV,CAAeC,UAFR;AAGjBN,WAAS,oBAAUO;AAHF,C;AADA7B,M,CAOZ8B,Y,GAAe;AACpBN,aAAWO,SADS;AAEpBT,WAASS;AAFW,C","file":"Parser.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport InitFacebook from './InitFacebook';\n\nexport default class Parser extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    onParse: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: undefined,\n    onParse: undefined,\n  };\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillReceiveProps(props) {\n    const oldChildren = this.props.children;\n    const { children } = props;\n\n    if (!children || !oldChildren) {\n      return;\n    }\n\n    const changed = Object.keys(oldChildren.props).find((propName) => {\n      const oldValue = oldChildren.props[propName];\n      const newValue = children.props[propName];\n\n      return oldValue !== newValue;\n    });\n\n    if (changed) {\n      this.rerender();\n    }\n  }\n\n  rerender() {\n    this.forceUpdate();\n\n    this.parsed = false;\n    this.parse();\n  }\n\n  handleFacebookReady = (facebook) => {\n    this.facebook = facebook;\n    this.parse();\n  }\n\n  handleContainer = (container) => {\n    this.container = container;\n    this.parse();\n  }\n\n  parse() {\n    const { parsed, container, facebook } = this;\n    if (parsed || !container || !facebook) {\n      return false;\n    }\n\n    this.parsed = true;\n\n    const parseResponse = facebook.parse(container);\n\n    const { onParse } = this.props;\n    if (onParse) {\n      onParse(parseResponse);\n    }\n\n    return parseResponse;\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <InitFacebook onReady={this.handleFacebookReady}>\n        <div className={className} ref={this.handleContainer}>\n          {children}\n        </div>\n      </InitFacebook>\n    );\n  }\n}\n"]}