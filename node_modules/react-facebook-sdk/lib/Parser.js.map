{"version":3,"sources":["../src/Parser.jsx"],"names":["Parser","handleFacebookReady","facebook","parse","handleContainer","container","shouldComponentUpdate","componentWillReceiveProps","props","oldChildren","children","changed","Object","keys","find","propName","oldValue","newValue","rerender","forceUpdate","parsed","parseResponse","onParse","render","className","propTypes","string","node","isRequired","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,M;;;;;;;;;;;;0JA2CnBC,mB,GAAsB,UAACC,QAAD,EAAc;AAClC,YAAKA,QAAL,GAAgBA,QAAhB;AACA,YAAKC,KAAL;AACD,K,QAEDC,e,GAAkB,UAACC,SAAD,EAAe;AAC/B,YAAKA,SAAL,GAAiBA,SAAjB;AACA,YAAKF,KAAL;AACD,K;;;mBAvCDG,qB,oCAAwB;AACtB,WAAO,KAAP;AACD,G;;mBAEDC,yB,sCAA0BC,K,EAAO;AAC/B,QAAMC,cAAc,KAAKD,KAAL,CAAWE,QAA/B;AAD+B,QAEvBA,QAFuB,GAEVF,KAFU,CAEvBE,QAFuB;;;AAI/B,QAAI,CAACA,QAAD,IAAa,CAACD,WAAlB,EAA+B;AAC7B;AACD;;AAED,QAAME,UAAUC,OAAOC,IAAP,CAAYJ,YAAYD,KAAxB,EAA+BM,IAA/B,CAAoC,UAACC,QAAD,EAAc;AAChE,UAAMC,WAAWP,YAAYD,KAAZ,CAAkBO,QAAlB,CAAjB;AACA,UAAME,WAAWP,SAASF,KAAT,CAAeO,QAAf,CAAjB;;AAEA,aAAOC,aAAaC,QAApB;AACD,KALe,CAAhB;;AAOA,QAAIN,OAAJ,EAAa;AACX,WAAKO,QAAL;AACD;AACF,G;;mBAEDA,Q,uBAAW;AACT,SAAKC,WAAL;;AAEA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKjB,KAAL;AACD,G;;mBAYDA,K,oBAAQ;AAAA,QACEiB,MADF,GACkC,IADlC,CACEA,MADF;AAAA,QACUf,SADV,GACkC,IADlC,CACUA,SADV;AAAA,QACqBH,QADrB,GACkC,IADlC,CACqBA,QADrB;;AAEN,QAAIkB,UAAU,CAACf,SAAX,IAAwB,CAACH,QAA7B,EAAuC;AACrC,aAAO,KAAP;AACD;;AAED,SAAKkB,MAAL,GAAc,IAAd;;AAEA,QAAMC,gBAAgBnB,SAASC,KAAT,CAAeE,SAAf,CAAtB;;AARM,QAUEiB,OAVF,GAUc,KAAKd,KAVnB,CAUEc,OAVF;;AAWN,QAAIA,OAAJ,EAAa;AACXA,cAAQD,aAAR;AACD;;AAED,WAAOA,aAAP;AACD,G;;mBAEDE,M,qBAAS;AAAA,iBACyB,KAAKf,KAD9B;AAAA,QACCgB,SADD,UACCA,SADD;AAAA,QACYd,QADZ,UACYA,QADZ;;;AAGP,WACE;AAAA;AAAA,QAAc,SAAS,KAAKT,mBAA5B;AACE;AAAA;AAAA,UAAK,WAAWuB,SAAhB,EAA2B,KAAK,KAAKpB,eAArC;AACGM;AADH;AADF,KADF;AAOD,G;;;4BAhFMe,S,GAAY;AACjBD,aAAW,oBAAUE,MADJ;AAEjBhB,YAAU,oBAAUiB,IAAV,CAAeC,UAFR;AAGjBN,WAAS,oBAAUO;AAHF,C,SAMZC,Y,GAAe;AACpBN,aAAWO,SADS;AAEpBT,WAASS;AAFW,C;kBAPH/B,M","file":"Parser.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport InitFacebook from './InitFacebook';\n\nexport default class Parser extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    onParse: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: undefined,\n    onParse: undefined,\n  };\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillReceiveProps(props) {\n    const oldChildren = this.props.children;\n    const { children } = props;\n\n    if (!children || !oldChildren) {\n      return;\n    }\n\n    const changed = Object.keys(oldChildren.props).find((propName) => {\n      const oldValue = oldChildren.props[propName];\n      const newValue = children.props[propName];\n\n      return oldValue !== newValue;\n    });\n\n    if (changed) {\n      this.rerender();\n    }\n  }\n\n  rerender() {\n    this.forceUpdate();\n\n    this.parsed = false;\n    this.parse();\n  }\n\n  handleFacebookReady = (facebook) => {\n    this.facebook = facebook;\n    this.parse();\n  }\n\n  handleContainer = (container) => {\n    this.container = container;\n    this.parse();\n  }\n\n  parse() {\n    const { parsed, container, facebook } = this;\n    if (parsed || !container || !facebook) {\n      return false;\n    }\n\n    this.parsed = true;\n\n    const parseResponse = facebook.parse(container);\n\n    const { onParse } = this.props;\n    if (onParse) {\n      onParse(parseResponse);\n    }\n\n    return parseResponse;\n  }\n\n  render() {\n    const { className, children } = this.props;\n\n    return (\n      <InitFacebook onReady={this.handleFacebookReady}>\n        <div className={className} ref={this.handleContainer}>\n          {children}\n        </div>\n      </InitFacebook>\n    );\n  }\n}\n"]}