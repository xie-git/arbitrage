{"version":3,"sources":["../src/Login.jsx"],"names":["Login","process","facebook","props","scope","fields","returnScopes","rerequest","reauthorize","loginQpts","authType","return_scopes","push","length","auth_type","join","login","response","status","Error","getTokenDetailWithProfile","propTypes","string","isRequired","arrayOf","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,K;;;;;;;;kBAoBbC,O;yGAAQC,Q;;;;;;;uBACoD,KAAKC,K,EAA7DC,K,UAAAA,K,EAAOC,M,UAAAA,M,EAAQC,Y,UAAAA,Y,EAAcC,S,UAAAA,S,EAAWC,W,UAAAA,W;AAC1CC,uB,GAAY,EAAEL,YAAF,E;AACZM,sB,GAAW,E;;;AAEjB,kBAAIJ,YAAJ,EAAkB;AAChBG,0BAAUE,aAAV,GAA0B,IAA1B;AACD;;AAED,kBAAIJ,SAAJ,EAAe;AACbG,yBAASE,IAAT,CAAc,WAAd;AACD;;AAED,kBAAIJ,WAAJ,EAAiB;AACfE,yBAASE,IAAT,CAAc,gBAAd;AACD;;AAED,kBAAIF,SAASG,MAAb,EAAqB;AACnBJ,0BAAUK,SAAV,GAAsBJ,SAASK,IAAT,CAAc,GAAd,CAAtB;AACD;;;qBAEsBb,SAASc,KAAT,CAAeP,SAAf,C;;;AAAjBQ,sB;;oBACFA,SAASC,MAAT,KAAoB,W;;;;;oBAChB,IAAIC,KAAJ,CAAU,mBAAV,C;;;+CAGDjB,SAASkB,yBAAT,CAAmC,EAAEf,cAAF,EAAnC,C;;;;;;;;;;;;;;;;;;6BA7CFgB,S,8BACF,kBAAQA,S;AACXjB,SAAO,oBAAUkB,MAAV,CAAiBC,U;AACxBlB,UAAQ,oBAAUmB,OAAV,CAAkB,oBAAUF,MAA5B,C;AACRhB,gBAAc,oBAAUmB,I;AACxBlB,aAAW,oBAAUkB,I;AACrBjB,eAAa,oBAAUiB;WAGlBC,Y,8BACF,kBAAQA,Y;AACXtB,SAAO,E;AACPC,UAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,WAArB,EAAkC,aAAlC,EACN,MADM,EACE,OADF,EACW,QADX,EACqB,QADrB,EAC+B,UAD/B,EAC2C,UAD3C,EACuD,MADvD,C;AAERC,gBAAc,K;AACdC,aAAW,K;AACXC,eAAa;;kBAjBIR,K","file":"Login.js","sourcesContent":["import PropTypes from 'prop-types';\nimport Process from './Process';\n\nexport default class Login extends Process {\n  static propTypes = {\n    ...Process.propTypes,\n    scope: PropTypes.string.isRequired,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    returnScopes: PropTypes.bool,\n    rerequest: PropTypes.bool,\n    reauthorize: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    ...Process.defaultProps,\n    scope: '',\n    fields: ['id', 'first_name', 'last_name', 'middle_name',\n      'name', 'email', 'locale', 'gender', 'timezone', 'verified', 'link'],\n    returnScopes: false,\n    rerequest: false,\n    reauthorize: false,\n  };\n\n  async process(facebook) {\n    const { scope, fields, returnScopes, rerequest, reauthorize } = this.props;\n    const loginQpts = { scope };\n    const authType = [];\n\n    if (returnScopes) {\n      loginQpts.return_scopes = true;\n    }\n\n    if (rerequest) {\n      authType.push('rerequest');\n    }\n\n    if (reauthorize) {\n      authType.push('reauthenticate');\n    }\n\n    if (authType.length) {\n      loginQpts.auth_type = authType.join(',');\n    }\n\n    const response = await facebook.login(loginQpts);\n    if (response.status !== 'connected') {\n      throw new Error('Unauthorized user');\n    }\n\n    return facebook.getTokenDetailWithProfile({ fields });\n  }\n}\n"]}